name: Deploy Service Infra

on:
  repository_dispatch:
    types: [deploy-app]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: set vars from dispatch
        id: vars
        run: |
          echo "REPO=${{github.event.client_payload.source_repo}}" >> $GITHUB_ENV

      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          repository: ezechuka/${{ env.REPO }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: main

      - name: Get commit SHA
        id: commit
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{env.REPO}}:${{ steps.commit.outputs.SHORT_SHA }} \
          -t ${{ secrets.DOCKER_USERNAME }}/${{env.REPO}}:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{env.REPO}}:${{ steps.commit.outputs.SHORT_SHA }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{env.REPO}}:latest

  deploy:
    name: Deploy to Docker Swarm with Stack
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add VPS to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Upload compose file to VPS
        run: |
          scp docker-compose.yml ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/home/${{ secrets.DEPLOY_USER }}/app/docker-compose.yml

      - name: Deploy via SSH with Docker Stack
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_PASSWORD }}:${{ steps.commit.outputs.SHORT_SHA }}
            docker stack deploy -c /home/${{ secrets.DEPLOY_USER }}/app/docker-compose.yml mystack
          EOF
